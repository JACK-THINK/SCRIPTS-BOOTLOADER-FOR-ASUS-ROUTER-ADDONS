#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="FW_V2RAY_TRANSPARENT_PROXY"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="DISABLE"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# USER_DEFINED_CHAIN_NAME: Name of the user-defined chain
# 设置自定义变量USER_DEFINED_CHAIN_NAME为防火墙自定义链名
USER_DEFINED_CHAIN_NAME="V2RAY_TPROXY"
#
# LOCAL_PORT: Port of the V2RAY-DOKODEMO-DOOR
# 设置自定义变量LOCAL_PORT为V2RAY-DOKODEMO-DOOR的接收端口
LOCAL_PORT="45154"
#
# INTRANET_SET: Set of intranet
# 设置自定义变量INTRANET_SET为内网地址集
INTRANET_SET="192.168.0.0/16"
#
# ROUTING_MARK: Mark of PBR
# 设置自定义变量ROUTING_MARK为策略路由标记
ROUTING_MARK="0x2333"
#
# ROUTING_TABLE: Routing table of PBR
# 设置自定义变量ROUTING_TABLE为策略路由表
ROUTING_TABLE="100"
#
# UDP_STATUS: Status of the UDP proxy
# 设置自定义变量UDP_STATUS为UDP代理状态
UDP_STATUS="$(iptables -t mangle -nvL | /opt/bin/grep ''"Chain ${USER_DEFINED_CHAIN_NAME}"'_UDP')"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ---------*"
#
########## END ##########
#
#
########## UPDATE DNS SETTINGS ##########
#
/opt/bin/mv -f "/tmp/resolv.dnsmasq.bak" "/tmp/resolv.dnsmasq"
#
# Check if chain ${USER_DEFINED_CHAIN_NAME}_UDP exists
# 检查${USER_DEFINED_CHAIN_NAME}_UDP链是否存在
if [ -z "${UDP_STATUS}" ]
then
    /opt/bin/rm -f "${ENTWARE_DNSMASQD}/v2ray_dns.conf"
else
    /opt/bin/rm -f "${ENTWARE_DNSMASQD}/v2ray_dns_tproxy.conf"
fi
#
/opt/bin/dnsmasq.d_refresh > /dev/null 2>&1
#
########## END ##########
#
#
########## UNSET TCP PROXY ##########
#
# Check if chain ${USER_DEFINED_CHAIN_NAME}_TCP exists
# 检查${USER_DEFINED_CHAIN_NAME}_TCP链是否存在
if [ -z "$(iptables -t nat -nvL | /opt/bin/grep ''"Chain ${USER_DEFINED_CHAIN_NAME}"'_TCP')" ]
then
    # Stop and Exit
    # 如果${USER_DEFINED_CHAIN_NAME}_TCP链不存在，则该程序终止
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ${SERVICE_NAME} HAS BEEN ${SERVICE_FUNCTION}D ALREADY"
    #
    exit 1
    #
else
    # Check if chain ${USER_DEFINED_CHAIN_NAME}_UDP exists
    # 检查${USER_DEFINED_CHAIN_NAME}_UDP链是否存在
    if [ -z "${UDP_STATUS}" ]
    then
        # Check if chain ${USER_DEFINED_CHAIN_NAME}_TCP is referenced by chain PREROUTING
        # 检查${USER_DEFINED_CHAIN_NAME}_TCP链是否被PREROUTING链所引用
        if [ -n "$(iptables -t nat -nvL PREROUTING | /opt/bin/grep ''"${USER_DEFINED_CHAIN_NAME}"'_TCP')" ]
        then
            # Disable chain ${USER_DEFINED_CHAIN_NAME}_TCP
            # 禁用${USER_DEFINED_CHAIN_NAME}_TCP链
            iptables -t nat -D PREROUTING -p tcp -j "${USER_DEFINED_CHAIN_NAME}_TCP"
        fi
        #
    else
        # Check if chain ${USER_DEFINED_CHAIN_NAME}_TCP is referenced by chain OUTPUT and chain PREROUTING
        # 检查${USER_DEFINED_CHAIN_NAME}_TCP链是否被OUTPUT链和PREROUTING链所引用
        if [ -n "$(iptables -t nat -nvL OUTPUT | /opt/bin/grep ''"${USER_DEFINED_CHAIN_NAME}"'_TCP')" ] || \
        [ -n "$(iptables -t nat -nvL PREROUTING | /opt/bin/grep ''"${USER_DEFINED_CHAIN_NAME}"'_TCP')" ]
        then
            # Disable chain ${USER_DEFINED_CHAIN_NAME}_TCP
            # 禁用${USER_DEFINED_CHAIN_NAME}_TCP链
            iptables -t nat -D OUTPUT -p tcp -j "${USER_DEFINED_CHAIN_NAME}_TCP"
            iptables -t nat -D PREROUTING -p tcp -s "${INTRANET_SET}" -j "${USER_DEFINED_CHAIN_NAME}_TCP"
        fi
        #
        # 对内网数据包取消SNAT操作
        iptables -t nat -D POSTROUTING -s "${INTRANET_SET}" ! -d "${INTRANET_SET}" -j MASQUERADE
    fi
    #
    # Flush chain ${USER_DEFINED_CHAIN_NAME}_TCP
    # 清空${USER_DEFINED_CHAIN_NAME}_TCP链
    iptables -t nat -F "${USER_DEFINED_CHAIN_NAME}_TCP"
    #
    # Remove chain ${USER_DEFINED_CHAIN_NAME}_TCP
    # 删除${USER_DEFINED_CHAIN_NAME}_TCP链
    iptables -t nat -X "${USER_DEFINED_CHAIN_NAME}_TCP"
fi
#
########## END ##########
#
#
########## UNSET UDP PROXY ##########
#
# Check if chain ${USER_DEFINED_CHAIN_NAME}_UDP exists
# 检查${USER_DEFINED_CHAIN_NAME}_UDP链是否存在
if [ -z "${UDP_STATUS}" ]
then
    # Do nothing but prompt the user
    # 如果${USER_DEFINED_CHAIN_NAME}_UDP链不存在，则执行
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: NO UDP PROXY"
    #
else
    # Check if chain ${USER_DEFINED_CHAIN_NAME}_UDP is referenced by chain OUTPUT
    # 检查${USER_DEFINED_CHAIN_NAME}_UDP链是否被OUTPUT链所引用
    if [ -n "$(iptables -t mangle -nvL OUTPUT | /opt/bin/grep ''"${USER_DEFINED_CHAIN_NAME}"'_UDP')" ]
    then
        # Disable chain ${USER_DEFINED_CHAIN_NAME}_UDP
        # 禁用${USER_DEFINED_CHAIN_NAME}_UDP链
        iptables -t mangle -D OUTPUT -p udp -j "${USER_DEFINED_CHAIN_NAME}_UDP"
    fi
    #
    # Check if chain ${USER_DEFINED_CHAIN_NAME}_UDP is referenced by chain PREROUTING
    # 检查${USER_DEFINED_CHAIN_NAME}_UDP链是否被PREROUTING链所引用
    if [ -n "$(iptables -t mangle -nvL PREROUTING | /opt/bin/grep ''"${USER_DEFINED_CHAIN_NAME}"'_UDP')" ]
    then
        # Disable chain ${USER_DEFINED_CHAIN_NAME}_UDP
        # 禁用${USER_DEFINED_CHAIN_NAME}_UDP链
        iptables -t mangle -D PREROUTING -p udp -s "${INTRANET_SET}" -m mark ! --mark "${ROUTING_MARK}" -j "${USER_DEFINED_CHAIN_NAME}_UDP"
    fi
    #
    # 取消处理打了MARK的UDP包
    iptables -t mangle -D PREROUTING -m mark --mark "${ROUTING_MARK}" -p udp -j TPROXY --on-ip "127.0.0.1" --on-port "${LOCAL_PORT}"
    #
    # Flush chain ${USER_DEFINED_CHAIN_NAME}_UDP
    # 清空${USER_DEFINED_CHAIN_NAME}_UDP链
    iptables -t mangle -F "${USER_DEFINED_CHAIN_NAME}_UDP"
    #
    # Remove chain ${USER_DEFINED_CHAIN_NAME}_UDP
    # 删除${USER_DEFINED_CHAIN_NAME}_UDP链
    iptables -t mangle -X "${USER_DEFINED_CHAIN_NAME}_UDP"
    #
    # Remove IP route and rules
    # 删除IP路由及规则
    ip route del local 0/0 dev lo table "${ROUTING_TABLE}"
    ip rule del fwmark "${ROUTING_MARK}" table "${ROUTING_TABLE}"
fi
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
#
exit 0
#
########## END ##########