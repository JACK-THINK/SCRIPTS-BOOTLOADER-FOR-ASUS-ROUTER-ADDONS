#!/bin/sh
#
########## CHECK ASUS ROUTER MODEL ##########
#
ROUTER_MODEL=$(nvram get model)
#
########## END ##########
#
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | awk -F / '{print "/"$2"/"$3"/"$4}')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN=${SBL_SYS_USR}/v2ray/bin
#
# PRIVATE_USR: The directory which contains all the external software resources related to this program
# 设置自定义变量PRIVATE_USR为此程序外部软件资源目录
PRIVATE_USR=${SBL_SYS_USR}/v2ray/usr
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="V2RAY"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="INSTALLATION"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
logger -st "($(basename $0))" $$ "*--------- ${SERVICE_NAME} ON ${ROUTER_MODEL} ${SERVICE_FUNCTION} ---------*"
#
########## END ##########
#
#
########## INSTALLATION CONFIGURATION ##########
#
# Check the architecture of the ASUS Router
# 检查华硕路由器架构
ROUTER_ARCHITECTURE=$(uname -m)
#
########## END ##########
#
#
########## INSTALL V2RAY ##########
#
# Install V2ray according to the architecture of the ASUS Router
# 根据路由器架构，自动安装适当版本的V2ray
if [ ${ROUTER_ARCHITECTURE} == "armv7l" ]
then
    unzip ${PRIVATE_BIN}/v2ray*arm.zip -d ${SBL_SYS_USR}/v2ray/
    mv ${SBL_SYS_USR}/v2ray/v2ray*/ ${PRIVATE_USR}/
    chmod -R 777 ${PRIVATE_USR}/
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS BEEN COMPLETE *****"
    #
elif [ ${ROUTER_ARCHITECTURE} == "aarch64" ]
then
    unzip ${PRIVATE_BIN}/v2ray*arm64.zip -d ${SBL_SYS_USR}/v2ray/
    mv ${SBL_SYS_USR}/v2ray/v2ray*/ ${PRIVATE_USR}/
    chmod -R 777 ${PRIVATE_USR}/
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS BEEN COMPLETE *****"
    #
elif [ ${ROUTER_ARCHITECTURE} == "mips" ]
then
    unzip ${PRIVATE_BIN}/v2ray*mipsle.zip -d ${SBL_SYS_USR}/v2ray/
    mv ${SBL_SYS_USR}/v2ray/v2ray*/ ${PRIVATE_USR}/
    chmod -R 777 ${PRIVATE_USR}/
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS BEEN COMPLETE *****"
    #
else
    # Do nothing but prompt the user
    # 如果路由器架构不符合上述三种情况，则执行
    logger -st "($(basename $0))" $$ "***** ROUTER ARCHITECTURE IS UNKNOWN *****"
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS NOT BEEN COMPLETE *****"
fi
#
########## END ##########