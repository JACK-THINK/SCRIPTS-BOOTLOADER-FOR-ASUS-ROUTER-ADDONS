#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | sed 's/\/script_bootloader.*//')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT=${SBL_SYS_USR}/sbl-firewalld
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN=${PRIVATE_ROOT}/bin
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="IPSEC"
#
# TABLE_NAME: Name of the table
# 设置自定义变量TABLE_NAME为防火墙表名
TABLE_NAME="nat"
#
# BUILT_IN_CHAIN_NAME: Name of the built-in chain
# 设置自定义变量BUILT_IN_CHAIN_NAME为防火墙默认链名
BUILT_IN_CHAIN_NAME="PREROUTING"
#
# USER_DEFINED_CHAIN_NAME: Name of the user-defined chain
# 设置自定义变量USER_DEFINED_CHAIN_NAME为防火墙自定义链名
USER_DEFINED_CHAIN_NAME="IPSEC"
#
# TARGET_SERVER_IP: IP address of the target server
# 设置自定义变量TARGET_SERVER_IP为目标服务器IP地址
TARGET_SERVER_IP=""
#
# Local Ports
# 本地端口
LOCAL_PORT_1="500"
LOCAL_PORT_2="4500"
#
# Destination Ports
# 目的端口
DESTINATION_PORT_1="500"
DESTINATION_PORT_2="4500"
#
########## END ##########
#
#
########## GET WAN IP ADDRESS ##########
#
WAN_IP_ADDRESS=$(ifconfig ppp0 | grep 'inet addr' | awk '{print $2}' | tr -d 'addr:')
#
########## END ##########
#
#
########## TEST RULES ##########
#
# TEST_USER_DEFINED_CHAIN_NAME: Check if ${USER_DEFINED_CHAIN_NAME} exists
# TEST_USER_DEFINED_CHAIN_NAME: 测试${USER_DEFINED_CHAIN_NAME}是否存在
CHECK_RULE=$(iptables -t ${TABLE_NAME} -nvL | grep "Chain ${USER_DEFINED_CHAIN_NAME}")
if [ ! -z "${CHECK_RULE}" ]
then
    TEST_USER_DEFINED_CHAIN_NAME=true
    #
    # TEST_REFERENCE: Check if ${USER_DEFINED_CHAIN_NAME} is referenced by ${BUILT_IN_CHAIN_NAME}
    # TEST_REFERENCE: 检查${USER_DEFINED_CHAIN_NAME}是否被${BUILT_IN_CHAIN_NAME}引用
    CHECK_RULE=$(iptables -t ${TABLE_NAME} -nvL ${BUILT_IN_CHAIN_NAME} | grep "${USER_DEFINED_CHAIN_NAME}")
    if [ ! -z "${CHECK_RULE}" ]
    then
        TEST_REFERENCE=true
        #
        # Get ${DESTINATION_IP_ADDRESS} from ${BUILT_IN_CHAIN_NAME}
        # 从${BUILT_IN_CHAIN_NAME}中获取${DESTINATION_IP_ADDRESS}
        DESTINATION_IP_ADDRESS=$(iptables -t ${TABLE_NAME} -nvL ${BUILT_IN_CHAIN_NAME} | grep "${USER_DEFINED_CHAIN_NAME}" | awk '{print $9}')
        #
        # TEST_IP: Check if ${DESTINATION_IP_ADDRESS} is equivolent to ${WAN_IP_ADDRESS}
        # TEST_IP: ${USER_DEFINED_CHAIN_NAME}链内规则测试值
        if [ "${DESTINATION_IP_ADDRESS}" == "${WAN_IP_ADDRESS}" ]
        then
            TEST_IP=true
            #
            # TEST_UDP_LOCAL_PORT_1: Test the rules in ${USER_DEFINED_CHAIN_NAME}
            # TEST_UDP_LOCAL_PORT_1: ${USER_DEFINED_CHAIN_NAME}链内规则测试值
            CHECK_RULE=$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^udp#.*:${LOCAL_PORT_1}")
            if [ ! -z "${CHECK_RULE}" ]
            then
                TEST_UDP_LOCAL_PORT_1=true
            else
                TEST_UDP_LOCAL_PORT_1=false
                echo -e "ERROR: ${LOCAL_PORT_1}/UDP"
            fi
            #
            # TEST_UDP_LOCAL_PORT_2: Test the rules in ${USER_DEFINED_CHAIN_NAME}
            # TEST_UDP_LOCAL_PORT_2: ${USER_DEFINED_CHAIN_NAME}链内规则测试值
            CHECK_RULE=$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^udp#.*:${LOCAL_PORT_2}")
            if [ ! -z "${CHECK_RULE}" ]
            then
                TEST_UDP_LOCAL_PORT_2=true
            else
                TEST_UDP_LOCAL_PORT_2=false
                echo -e "ERROR: ${LOCAL_PORT_2}/UDP"
            fi
            #
        else
            TEST_IP=false
            echo -e "ERROR: NO IP CONSISTENCY"
        fi
        #
    else
        #
        TEST_REFERENCE=false
        #
        # Make ${DESTINATION_IP_ADDRESS} 'NULL'
        # 如果未被引用，则令${DESTINATION_IP_ADDRESS}为'NULL'
        DESTINATION_IP_ADDRESS='NULL'
        #
        echo -e "ERROR: ${USER_DEFINED_CHAIN_NAME} IS NOT REFERENCED BY ${BUILT_IN_CHAIN_NAME}"
    fi
    #
else
    #
    TEST_USER_DEFINED_CHAIN_NAME=false
    echo -e "ERROR: NO CHAIN ${USER_DEFINED_CHAIN_NAME}"
fi
#
########## END ##########
#
#
########## SET IPTABLES RULES ##########
#
# Check if the rule has been loaded
# 检查防火墙规则是否已被加载
if ${TEST_USER_DEFINED_CHAIN_NAME} && \
${TEST_REFERENCE} && \
${TEST_IP} && \
${TEST_UDP_LOCAL_PORT_1} && ${TEST_UDP_LOCAL_PORT_2}
then
    # Everything is OK
    # 全部规则完好
    echo -e "PORT FORWARDING RULE ${SERVICE_NAME} HAS BEEN LOADED SUCCESSFULLY\n\nROUTER:${LOCAL_PORT_1}/UDP\tTO\t${TARGET_SERVER_IP}:${DESTINATION_PORT_1}/UDP\nROUTER:${LOCAL_PORT_2}/UDP\tTO\t${TARGET_SERVER_IP}:${DESTINATION_PORT_2}/UDP"
    #
    exit 0
    #
else
    # Delete all the relevant rules first and reload them again
    # 如果有任意规则不存在，则删除全部规则，然后重新加载
    ${PRIVATE_BIN}/fw_nat_PREROUTING_ipsec_disable.service > /dev/null 2>&1
    #
    # Create chain ${USER_DEFINED_CHAIN_NAME}
    # 创建${USER_DEFINED_CHAIN_NAME}链
    iptables -t ${TABLE_NAME} -N ${USER_DEFINED_CHAIN_NAME}
    #
    # Open ${LOCAL_PORT_1}/udp
    # 打开${LOCAL_PORT_1}/udp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m udp -p udp --dport ${LOCAL_PORT_1} -j DNAT --to-destination ${TARGET_SERVER_IP}:${DESTINATION_PORT_1}
    #
    # Open ${LOCAL_PORT_2}/udp
    # 打开${LOCAL_PORT_2}/udp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m udp -p udp --dport ${LOCAL_PORT_2} -j DNAT --to-destination ${TARGET_SERVER_IP}:${DESTINATION_PORT_2}
    #
    # Enable chain ${USER_DEFINED_CHAIN_NAME}
    # 启用${USER_DEFINED_CHAIN_NAME}链
    iptables -t ${TABLE_NAME} -I ${BUILT_IN_CHAIN_NAME} 1 -d ${WAN_IP_ADDRESS} -j ${USER_DEFINED_CHAIN_NAME}
    #
    echo "LOAD PORT FORWARDING RULE ${SERVICE_NAME}"
    #
    exit 1
    #
fi
#
########## END ##########