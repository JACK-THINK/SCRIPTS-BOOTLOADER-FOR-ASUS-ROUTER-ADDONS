#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | sed 's/\/script_bootloader.*//')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN=${SBL_SYS_USR}/sbl-firewalld/bin
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="QBITTORRENT"
#
# NAME OF THE TABLE
# 防火墙表名
TABLE_NAME="nat"
#
# NAME OF THE BUILT-IN CHAIN
# 防火墙默认链名
BUILT_IN_CHAIN_NAME="PREROUTING"
#
# NAME OF THE USER-DEFINED CHAIN
# 防火墙自定义链名
USER_DEFINED_CHAIN_NAME="QBITTORRENT"
#
# Target Server
# 目标服务器
TARGET_SERVER=""
#
# PORTS
# 端口
PORT1=17201
PORT2=17202
#
########## END ##########
#
#
########## GET WAN IP ADDRESS ##########
#
WAN_IP_ADDRESS=$(ifconfig ppp0 | grep 'inet addr' | awk '{print $2}' | tr -d 'addr:')
#
########## END ##########
#
#
########## GET DESTINATION IP ADDRESS ##########
#
# Check if ${USER_DEFINED_CHAIN_NAME} is referenced by ${BUILT_IN_CHAIN_NAME}
# 检查${USER_DEFINED_CHAIN_NAME}是否被${BUILT_IN_CHAIN_NAME}所引用
if [ -z "$(iptables -t ${TABLE_NAME} -nvL ${BUILT_IN_CHAIN_NAME} | grep "${USER_DEFINED_CHAIN_NAME}")" ]
then
    # Make ${DESTINATION_IP_ADDRESS} 'NULL'
    # 如果未被引用，则令${DESTINATION_IP_ADDRESS}为'NULL'
    DESTINATION_IP_ADDRESS='NULL'
    #
else
    # Get ${DESTINATION_IP_ADDRESS} from ${BUILT_IN_CHAIN_NAME}
    # 从${BUILT_IN_CHAIN_NAME}中获取${DESTINATION_IP_ADDRESS}
    DESTINATION_IP_ADDRESS=$(iptables -t ${TABLE_NAME} -nvL ${BUILT_IN_CHAIN_NAME} | grep "${USER_DEFINED_CHAIN_NAME}" | awk '{print $9}')
fi
#
########## END ##########
#
#
########## SET IPTABLES RULES ##########
#
# Check if the rule has been loaded
# 检查防火墙规则是否已被加载
if [ ${DESTINATION_IP_ADDRESS} != ${WAN_IP_ADDRESS} ] || \
[ -z "$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^tcp#.*:${PORT1}")" ] || \
[ -z "$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^udp#.*:${PORT1}")" ] || \
[ -z "$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^tcp#.*:${PORT2}")" ] || \
[ -z "$(iptables -t ${TABLE_NAME} -nvL ${USER_DEFINED_CHAIN_NAME} | awk '{print $4"#"$11}' | grep "^udp#.*:${PORT2}")" ]
then
    # Delete all the relevant rules first and reload them again
    # 如果有任意规则不存在，则删除全部规则，然后重新加载
    ${PRIVATE_BIN}/fw_nat_PREROUTING_qbittorrent_disable.service
    #
    # Create chain ${USER_DEFINED_CHAIN_NAME}
    # 创建${USER_DEFINED_CHAIN_NAME}链
    iptables -t ${TABLE_NAME} -N ${USER_DEFINED_CHAIN_NAME}
    #
    # Open ${PORT1}/tcp
    # 打开${PORT1}/tcp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m tcp -p tcp --dport ${PORT1} -j DNAT --to-destination ${TARGET_SERVER}:${PORT1}
    #
    # Open ${PORT1}/udp
    # 打开${PORT1}/udp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m udp -p udp --dport ${PORT1} -j DNAT --to-destination ${TARGET_SERVER}:${PORT1}
    #
    # Open ${PORT2}/tcp
    # 打开${PORT2}/tcp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m tcp -p tcp --dport ${PORT2} -j DNAT --to-destination ${TARGET_SERVER}:${PORT2}
    #
    # Open ${PORT2}/udp
    # 打开${PORT2}/udp
    iptables -t ${TABLE_NAME} -I ${USER_DEFINED_CHAIN_NAME} 1 -m udp -p udp --dport ${PORT2} -j DNAT --to-destination ${TARGET_SERVER}:${PORT2}
    #
    # Enable chain ${USER_DEFINED_CHAIN_NAME}
    # 启用${USER_DEFINED_CHAIN_NAME}链
    iptables -t ${TABLE_NAME} -I ${BUILT_IN_CHAIN_NAME} 1 -d ${WAN_IP_ADDRESS} -j ${USER_DEFINED_CHAIN_NAME}
    #
    echo "LOAD PORT FORWARDING RULE ${SERVICE_NAME}"
    #
    exit 1
    #
else
    # Everything is OK
    # 全部规则完好
    echo "PORT FORWARDING RULE ${SERVICE_NAME} HAS BEEN LOADED SUCCESSFULLY (${PORT1}/BOTH, ${PORT2}/BOTH)"
    #
    exit 0
fi