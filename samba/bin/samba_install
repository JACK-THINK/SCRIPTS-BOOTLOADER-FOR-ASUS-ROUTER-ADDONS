#!/bin/sh
#
########## CHECK ASUS ROUTER MODEL ##########
#
ROUTER_MODEL=$(nvram get model)
#
########## END ##########
#
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | sed 's/\/script_bootloader.*//')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# SBL_MONITD: The directory which contains all the configuration files used by monit
# 设置自定义变量SBL_MONITD为monit配置文件目录
SBL_MONITD=${USB_MOUNT_POINT}/etc/monit.d
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT=${SBL_SYS_USR}/samba
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC=${PRIVATE_ROOT}/etc
#
# COMPUTER_NAME: The computer_name defined in nvram
# 设置自定义变量COMPUTER_NAME为nvram中定义的computer_name
COMPUTER_NAME="$(nvram get computer_name)"
#
# ADMINUSER: The administrator of the router
# 设置环境变量ADMINUSER为路由器管理页面的登陆帐号
ADMINUSER=$(nvram get http_username)
#
# ADMINPASSWORD: The administrator's password of the router
# 设置环境变量ADMINPASSWORD为路由器管理页面的登陆密码
ADMINPASSWORD=$(nvram get http_passwd)
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="SAMBA"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="INSTALLATION"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
logger -st "($(basename $0))" $$ "*--------- ${SERVICE_NAME} ON ${ROUTER_MODEL} ${SERVICE_FUNCTION} ---------*"
#
########## END ##########
#
#
########## INSTALL SAMBA ##########
#
# Check if ENTWARE_ENABLE SERVICE has been loaded
# 检查ENTWARE_ENABLE SERVICE是否已启用
if [ $(which opkg) == "/opt/bin/opkg" ]
then
    logger -st "($(basename $0))" $$ "***** ENTWARE_ENABLE SERVICE HAS BEEN LOADED *****"
    #
    # Check if MONIT MANAGEMENT SYSTEM has been deployed
    # 检查MONIT MANAGEMENT SYSTEM是否已部署
    if [ -e "/opt/bin/monit" ]
    then
        logger -st "($(basename $0))" $$ "***** MONIT MANAGEMENT SYSTEM HAS BEEN DEPLOYED *****"
        #
        # Update the list of available packages
        # 更新可用程序包列表
        opkg update
        #
        # Install samba
        # 安装samba
        opkg install samba4-libs
        opkg install samba4-server
        opkg install samba4-client
        opkg install samba4-admin
        opkg install samba4-utils
        #
        # Install wsdd2
        # 安装wsdd2
        opkg install wsdd2
        #
        # Disable /opt/etc/init.d/S91smb
        # 禁用/opt/etc/init.d/S91smb
        mv /opt/etc/init.d/S91smb ${PRIVATE_ETC}/S91smb.bak
        #
        # Configure samba
        # 配置samba
        cp /opt/etc/samba/smb.conf /opt/etc/samba/smb.conf.bak
        sed -i '/netbios name/s/^/#/' /opt/etc/samba/smb.conf
        sed -i "\#netbios name#a\        netbios name = ${COMPUTER_NAME}" /opt/etc/samba/smb.conf
        sed -i '/socket options/s/^/#/' /opt/etc/samba/smb.conf
        sed -i "\#socket options#a\        socket options = TCP_NODELAY SO_KEEPALIVE IPTOS_LOWDELAY" /opt/etc/samba/smb.conf
        sed -i '/passdb backend/s/^/#/' /opt/etc/samba/smb.conf
        sed -i "\#passdb backend#a\        passdb backend = tdbsam:/opt/etc/samba/passdb.tdb" /opt/etc/samba/smb.conf
        sed -i '/syslog/s/^/#/' /opt/etc/samba/smb.conf
        sed -i '/smb passwd file/s/^/#/' /opt/etc/samba/smb.conf
        #
        sed -i "s/ROUTER/${ROUTER_MODEL}/" ${PRIVATE_ETC}/smb.conf.add
        cat ${PRIVATE_ETC}/smb.conf.add >> /opt/etc/samba/smb.conf
        #
        touch /opt/etc/printcap
        mkdir -p /opt/var/log/samba
        mkdir -p /opt/var/lib/samba/private
        mkdir -p /opt/var/cache/samba
        mkdir -p /opt/var/run/samba/ncalrpc
        chmod 755 /opt/var/lib/samba
        chmod 755 /opt/var/cache/samba
        #
        # Create default shared directory
        # 创建默认共享目录
        #mkdir /home/root/samba_share
        #
        # Disable /opt/etc/init.d/S99wsdd2
        # 禁用/opt/etc/init.d/S99wsdd2
        mv /opt/etc/init.d/S99wsdd2 ${PRIVATE_ETC}/S99wsdd2.bak
        #
        # Create default samba user
        # 创建默认samba用户
        echo -ne "${ADMINPASSWORD}\n${ADMINPASSWORD}\n" | /opt/bin/pdbedit -a -u "${ADMINUSER}" -t
        #
        # Configure monit
        # 配置monit
        cp ${PRIVATE_ETC}/monit.d/samba_server ${SBL_MONITD}/
        chmod 600 ${SBL_MONITD}/samba_server
        mv ${SBL_MONITD}/samba_server ${SBL_MONITD}/samba_server.on
        monit reload
        #
        logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS BEEN COMPLETE *****"
        #
    else
        # Do nothing but prompt the user
        # 如果MONIT MANAGEMENT SYSTEM未部署，则执行
        logger -st "($(basename $0))" $$ "***** MONIT MANAGEMENT SYSTEM HAS NOT BEEN DEPLOYED *****"
        logger -st "($(basename $0))" $$ "***** PLEASE DEPLOY MONIT MANAGEMENT SYSTEM FIRST *****"
        logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS NOT BEEN COMPLETE *****"
    fi
    #
else
    # Do nothing but prompt the user
    # 如果ENTWARE_ENABLE SERVICE未启用，则执行
    logger -st "($(basename $0))" $$ "***** ENTWARE_ENABLE SERVICE HAS NOT BEEN LOADED *****"
    logger -st "($(basename $0))" $$ "***** PLEASE ENABLE ENTWARE FIRST *****"
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS NOT BEEN COMPLETE *****"
fi
#
########## END ##########