#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="ADGUARD-HOME"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="ENABLE"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/adguardhome"
#
# PRIVATE_ETC: The directory which contains all the WORKING DIRECTORYs related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
# PRIVATE_USR: The directory which contains all the external software resources related to this program
# 设置自定义变量PRIVATE_USR为此程序外部软件资源目录
PRIVATE_USR="${PRIVATE_ROOT}/usr"
#
# PRIVATE_VAR: The directory which contains all the variable files related to this program
# 设置自定义变量PRIVATE_VAR为此程序可变文件目录
PRIVATE_VAR="${PRIVATE_ROOT}/var"
#
# ADGUARDHOME_PID_FILE: The path to adguardhome.pid
# 设置自定义变量ADGUARDHOME_PID_FILE为文件adguardhome.pid的绝对路径
ADGUARDHOME_PID_FILE="/var/run/adguardhome.pid"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ---------*"
#
########## END ##########
#
#
########## CHECK AND ENABLE ADGUARD-HOME ##########
#
# Check if ${PRIVATE_USR}/AdGuardHome, ${PRIVATE_ETC}/AdGuardHome.yaml, ${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf and ${PRIVATE_VAR} exist
# 检查文件${PRIVATE_USR}/AdGuardHome，${PRIVATE_ETC}/AdGuardHome.yaml，${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf和目录${PRIVATE_VAR}是否存在
if [ -e "${PRIVATE_USR}/AdGuardHome" ] && \
[ -e "${PRIVATE_ETC}/AdGuardHome.yaml" ] && \
[ -e "${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf" ] && \
[ -d "${PRIVATE_VAR}" ]
then
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ALL THE PREREQUISITES ARE MET"
    #
    # Load ${PRIVATE_USR}/AdGuardHome
    # 如果文件${PRIVATE_USR}/AdGuardHome，${PRIVATE_ETC}/AdGuardHome.yaml，${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf和目录${PRIVATE_VAR}存在，则执行
    /opt/bin/nohup "${PRIVATE_USR}/AdGuardHome" --config "${PRIVATE_ETC}/AdGuardHome.yaml" --work-dir "${PRIVATE_VAR}" --pidfile "${ADGUARDHOME_PID_FILE}" --no-check-update &> /dev/null &
    #
    # Update DNS server
    # 更新DNS服务器
    /opt/bin/mv -f "/tmp/resolv.dnsmasq" "/tmp/resolv.dnsmasq.bak"
    /opt/bin/cp -lf "${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf" "${ENTWARE_DNSMASQD}"
    /opt/bin/dnsmasq.d_refresh > /dev/null 2>&1
    #
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 0
    #
else
    # Do nothing but prompt the user
    # 如果文件${PRIVATE_USR}/AdGuardHome，${PRIVATE_ETC}/AdGuardHome.yaml，${PRIVATE_ETC}/dnsmasq.d/adguardhome.conf或目录${PRIVATE_VAR}不存在，则执行
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: NOT ALL THE PREREQUISITES ARE MET"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 1
fi
#
########## END ##########