#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_MONITD: The directory which contains all the configuration files used by monit
# 设置自定义变量ENTWARE_MONITD为monit配置文件目录
ENTWARE_MONITD="${ENTWARE_ETC}/monit.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/onu_access"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
########## END ##########
#
#
########## LOAD FUNCTIONS ##########
#
isValidIpAddress()
{
    if [ "$(/opt/bin/echo "${1}" | /opt/bin/sed -E -e 's/^[[:digit:]]*\.[[:digit:]]*.[[:digit:]]*.[[:digit:]]*/0.0.0.0/')" != "0.0.0.0" ]
    then
        return 1
    fi
    #
    local IP_ADDRESS_PART_1
    local IP_ADDRESS_PART_2
    local IP_ADDRESS_PART_3
    local IP_ADDRESS_PART_4
    #
    IP_ADDRESS_PART_1=$(/opt/bin/echo "${1}" | /opt/bin/sed -E -n -e 's/([[:digit:]]+)\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+/\1/p')
    IP_ADDRESS_PART_2=$(/opt/bin/echo "${1}" | /opt/bin/sed -E -n -e 's/[[:digit:]]+\.([[:digit:]]+)\.[[:digit:]]+\.[[:digit:]]+/\1/p')
    IP_ADDRESS_PART_3=$(/opt/bin/echo "${1}" | /opt/bin/sed -E -n -e 's/[[:digit:]]+\.[[:digit:]]+\.([[:digit:]]+)\.[[:digit:]]+/\1/p')
    IP_ADDRESS_PART_4=$(/opt/bin/echo "${1}" | /opt/bin/sed -E -n -e 's/[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.([[:digit:]]+)/\1/p')
    #
    if [ ${IP_ADDRESS_PART_1} -ge 0 ] && [ ${IP_ADDRESS_PART_1} -le 255 ] && \
    [ ${IP_ADDRESS_PART_2} -ge 0 ] && [ ${IP_ADDRESS_PART_2} -le 255 ] && \
    [ ${IP_ADDRESS_PART_3} -ge 0 ] && [ ${IP_ADDRESS_PART_3} -le 255 ] && \
    [ ${IP_ADDRESS_PART_4} -ge 0 ] && [ ${IP_ADDRESS_PART_4} -le 255 ]
    then
        return 0
    else
        return 1
    fi
}
#
doubleCheckAndConfirm()
{
    while [ 1 ]
    do
        local VALUE_1
        local VALUE_2
        #
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE: "
        read VALUE_1
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE AGAIN TO CONFIRM: "
        read VALUE_2
        #
        if [ "${VALUE_1}" == "${VALUE_2}" ]
        then
            eval ${1}="${VALUE_1}"
            break
        else
            /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: THE TWO VALUES ARE INCONSISTENT"
        fi
    done
}
#
########## END ##########
#
#
########## SET PARAMETERS ##########
#
case ${#} in
    0)
        while [ 1 ]
        do
            /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mONU IP ADDRESS\033[0m: IP address of ONU"
            doubleCheckAndConfirm ONU_IP_ADDRESS
            #
            isValidIpAddress "${ONU_IP_ADDRESS}"
            if [ ${?} -eq 1 ]
            then
                /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: ${ONU_IP_ADDRESS} IS INVALID"
            else
                break
            fi
        done
        ;;
    1)
        ONU_IP_ADDRESS="${1}"
        ;;
    *)
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: WRONG NUMBER OF PARAMETERS"
        #
        exit 1
        ;;
esac
#
IP_COMMAND="$(which ip)"
#
WAN_IFNAME="$(nvram get wan0_ifname)"
#
ONU_NET_PART="$(/opt/bin/echo "${ONU_IP_ADDRESS}" | /opt/bin/sed -E -e 's/([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*)\.([[:digit:]]*)/\1/')"
ONU_HOST_PART=$(/opt/bin/echo "${ONU_IP_ADDRESS}" | /opt/bin/sed -E -e 's/([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*)\.([[:digit:]]*)/\2/')
#
WAN_HOST_PART=$((${ONU_HOST_PART}+1))
#
if [ ${WAN_HOST_PART} -ge 255 ]
then
    WAN_HOST_PART=$((${WAN_HOST_PART}-2))
fi
#
BROADCAST_PART="255"
CIDR_MASK="24"
#
########## END ##########
#
#
########## CONFIGURE ONU_ACCESS ##########
#
/opt/bin/cp -f "${PRIVATE_ETC}/monit.d/onu_access_template" "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's#IP_COMMAND#'"${IP_COMMAND}"'#g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/ONU_IP_ADDRESS/'"${ONU_IP_ADDRESS}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/ONU_NET_PART/'"${ONU_NET_PART}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/WAN_HOST_PART/'"${WAN_HOST_PART}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/CIDR_MASK/'"${CIDR_MASK}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/BROADCAST_PART/'"${BROADCAST_PART}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
/opt/bin/sed -E -i 's/WAN_IFNAME/'"${WAN_IFNAME}"'/g' "${PRIVATE_ETC}/monit.d/onu_access"
#
########## END ##########
#
#
########## CONFIGURE MONIT ##########
#
if [ -e "${ENTWARE_MONITD}/onu_access" ] || [ -e "${ENTWARE_MONITD}/onu_access.on" ]
then
    /opt/bin/rm -f "${ENTWARE_MONITD}/onu_access"
    /opt/bin/rm -f "${ENTWARE_MONITD}/onu_access.on"
fi
#
/opt/bin/cp -f "${PRIVATE_ETC}/monit.d/onu_access" "${ENTWARE_MONITD}"
/opt/bin/chmod 600 "${ENTWARE_MONITD}/onu_access"
/opt/bin/mv -f "${ENTWARE_MONITD}/onu_access" "${ENTWARE_MONITD}/onu_access.on"
/opt/bin/monit reload
#
exit 0
#
########## END ##########