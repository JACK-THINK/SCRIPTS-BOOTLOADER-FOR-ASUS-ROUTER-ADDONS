#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/shadowsocks"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
########## END ##########
#
#
########## LOAD FUNCTIONS ##########
#
doubleCheckAndConfirm()
{
    while [ 1 ]
    do
        local VALUE_1
        local VALUE_2
        #
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE: "
        read VALUE_1
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE AGAIN TO CONFIRM: "
        read VALUE_2
        #
        if [ "${VALUE_1}" == "${VALUE_2}" ]
        then
            eval ${1}="${VALUE_1}"
            break
        else
            /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: THE TWO VALUES ARE INCONSISTENT"
        fi
    done
}
#
########## END ##########
#
#
########## SET PARAMETERS ##########
#
case ${#} in
    0)
        while [ 1 ]
        do
            /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mROLE\033[0m: client | server"
            doubleCheckAndConfirm ROLE
            #
            case "$(/opt/bin/echo "${ROLE}" | /opt/bin/sed -E 's/[[:upper:]]/\l&/g')" in
                "server" | "client")
                    break
                    ;;
                *)
                    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: INPUT VALUE IS INVALID"
                    ;;
            esac
            #
        done
        ;;
    1)
        ROLE="${1}"
        ;;
    *)
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: WRONG NUMBER OF PARAMETERS"
        #
        exit 1
        ;;
esac
#
case "$(/opt/bin/echo "${ROLE}" | /opt/bin/sed -E 's/[[:upper:]]/\l&/g')" in
    "server")
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mPASSWORD\033[0m: password of local shadowsocks server"
        doubleCheckAndConfirm PASSWORD
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mENCRYPTION METHOD\033[0m: aes-128-gcm | aes-192-gcm | aes-256-gcm | rc4-md5 | aes-128-cfb | aes-192-cfb | aes-256-cfb | aes-128-ctr | aes-192-ctr | aes-256-ctr | bf-cfb | camellia-128-cfb | camellia-192-cfb | camellia-256-cfb | chacha20-ietf-poly1305 | salsa20 | chacha20 and chacha20-ietf"
        doubleCheckAndConfirm ENCRYPTION_METHOD
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mOBFUSCATION\033[0m: enable | disable"
        doubleCheckAndConfirm OBFUSCATION
        #
        break
        ;;
    "client")
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mSERVER ADDRESS\033[0m: IP address or domain name of remote shadowsocks server"
        doubleCheckAndConfirm SERVER_ADDRESS
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mSERVER PORT\033[0m: port of remote shadowsocks server"
        doubleCheckAndConfirm SERVER_PORT
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mPASSWORD\033[0m: password of remote shadowsocks server"
        doubleCheckAndConfirm PASSWORD
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mENCRYPTION METHOD\033[0m: aes-128-gcm | aes-192-gcm | aes-256-gcm | rc4-md5 | aes-128-cfb | aes-192-cfb | aes-256-cfb | aes-128-ctr | aes-192-ctr | aes-256-ctr | bf-cfb | camellia-128-cfb | camellia-192-cfb | camellia-256-cfb | chacha20-ietf-poly1305 | salsa20 | chacha20 and chacha20-ietf"
        doubleCheckAndConfirm ENCRYPTION_METHOD
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mOBFUSCATION\033[0m: enable | disable"
        doubleCheckAndConfirm OBFUSCATION
        #
        break
        ;;
    *)
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: INPUT VALUE IS INVALID"
        ;;
esac
#
########## END ##########
#
#
########## CONFIGURE SHADOWSOCKS ##########
#
case "$(/opt/bin/echo "${ROLE}" | /opt/bin/sed -E 's/[[:upper:]]/\l&/g')" in
    "server")
        # Modify ${PRIVATE_ETC}/config_server.json
        # 修改${PRIVATE_ETC}/config_server.json
        /opt/bin/sed -E -i 's#^([[:space:]]+\"password\":).*#\1\"'"${PASSWORD}"'\",#' "${PRIVATE_ETC}/config_server.json"
        /opt/bin/sed -E -i 's#^([[:space:]]+\"method\":).*#\1\"'"${ENCRYPTION_METHOD}"'\",#' "${PRIVATE_ETC}/config_server.json"
        /opt/bin/sed -E -i '\#^[[:space:]]+\"plugin\":#d' "${PRIVATE_ETC}/config_server.json"
        /opt/bin/sed -E -i '\#^[[:space:]]+\"plugin_opts\":#d' "${PRIVATE_ETC}/config_server.json"
        NUM_LAST_LINE=$(/opt/bin/sed -ne '/}/=' "${PRIVATE_ETC}/config_server.json")
        NUM_TARGET_LINE=$((${NUM_LAST_LINE}-1))
        /opt/bin/sed -E -i ''"${NUM_TARGET_LINE}"'s#,$##' "${PRIVATE_ETC}/config_server.json"
        #
        if [ "$(/opt/bin/echo "${OBFUSCATION}" | /opt/bin/sed -E 's/[[:upper:]]/\l&/g')" == "enable" ]
        then
            /opt/bin/sed -E -i ''"${NUM_TARGET_LINE}"'s#$#,#' "${PRIVATE_ETC}/config_server.json"
            /opt/bin/sed -E -i '\#\}#iAAAA\"plugin\":\"obfs-server\",' "${PRIVATE_ETC}/config_server.json"
            /opt/bin/sed -E -i '\#\}#iAAAA\"plugin_opts\":\"obfs=http\"' "${PRIVATE_ETC}/config_server.json"
            /opt/bin/sed -E -i 's#^AAAA#    #' "${PRIVATE_ETC}/config_server.json"
        fi
        ;;
    "client")
        for CONFIG_FOR_CLIENT in "${PRIVATE_ETC}/config_local.json" "${PRIVATE_ETC}/config_redir.json" "${PRIVATE_ETC}/config_tunnel.json"
        do
            /opt/bin/sed -E -i 's#^([[:space:]]+\"server\":).*#\1\"'"${SERVER_ADDRESS}"'\",#' "${CONFIG_FOR_CLIENT}"
            /opt/bin/sed -E -i 's#^([[:space:]]+\"server_port\":).*#\1\"'"${SERVER_PORT}"'\",#' "${CONFIG_FOR_CLIENT}"
            /opt/bin/sed -E -i 's#^([[:space:]]+\"password\":).*#\1\"'"${PASSWORD}"'\",#' "${CONFIG_FOR_CLIENT}"
            /opt/bin/sed -E -i 's#^([[:space:]]+\"method\":).*#\1\"'"${ENCRYPTION_METHOD}"'\",#' "${CONFIG_FOR_CLIENT}"
            /opt/bin/sed -E -i '\#^[[:space:]]+\"plugin\":#d' "${CONFIG_FOR_CLIENT}"
            /opt/bin/sed -E -i '\#^[[:space:]]+\"plugin_opts\":#d' "${CONFIG_FOR_CLIENT}"
            NUM_LAST_LINE=$(/opt/bin/sed -ne '/}/=' "${CONFIG_FOR_CLIENT}")
            NUM_TARGET_LINE=$((${NUM_LAST_LINE}-1))
            /opt/bin/sed -E -i ''"${NUM_TARGET_LINE}"'s#,$##' "${CONFIG_FOR_CLIENT}"
            #
            if [ "$(/opt/bin/echo "${OBFUSCATION}" | /opt/bin/sed -E 's/[[:upper:]]/\l&/g')" == "enable" ]
            then
                /opt/bin/sed -E -i ''"${NUM_TARGET_LINE}"'s#$#,#' "${CONFIG_FOR_CLIENT}"
                /opt/bin/sed -E -i '\#\}#iAAAA\"plugin\":\"obfs\-local\",' "${CONFIG_FOR_CLIENT}"
                /opt/bin/sed -E -i '\#\}#iAAAA\"plugin_opts\":\"obfs=http\;obfs\-host=www\.bing\.com\"' "${CONFIG_FOR_CLIENT}"
                /opt/bin/sed -E -i 's#^AAAA#    #' "${CONFIG_FOR_CLIENT}"
            fi
        done
        ;;
esac
#
exit 0
#
########## END ##########