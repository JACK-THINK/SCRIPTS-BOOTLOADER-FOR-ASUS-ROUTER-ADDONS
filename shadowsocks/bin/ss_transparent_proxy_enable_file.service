#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT=${SBL_SYS_USR}/shadowsocks
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN=${PRIVATE_ROOT}/bin
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC=${PRIVATE_ROOT}/etc
#
# SS_REDIR_PID_FILE: The path to ss_redir.pid
# 设置自定义变量SS_REDIR_PID_FILE为文件ss_redir.pid的绝对路径
SS_REDIR_PID_FILE=/var/run/ss_redir.pid
#
# SS_TUNNEL_PID_FILE: The path to ss_tunnel.pid
# 设置自定义变量SS_TUNNEL_PID_FILE为文件ss_tunnel.pid的绝对路径
SS_TUNNEL_PID_FILE=/var/run/ss_tunnel.pid
#
# SERVER_DOMAIN: Domain of the SS-SERVER
# 设置自定义变量SERVER_DOMAIN为SS-SERVER的域名
SERVER_DOMAIN=$(/opt/bin/grep '"server":' ${PRIVATE_ETC}/config_redir.json | /opt/bin/gawk -F '"' '{print $4}')
#
# SERVER_IP: Domain of the SS-SERVER
# 设置自定义变量SERVER_IP为SS-SERVER的IP地址
SERVER_IP=$(nslookup ${SERVER_DOMAIN} | /opt/bin/sed -n '/Name/,+1p' | /opt/bin/tail -n 1 | /opt/bin/gawk '{print $3}')
#
# BUILT_IN_CHAIN_NAME: Name of the built-in chain
# 设置自定义变量BUILT_IN_CHAIN_NAME为防火墙默认链名
BUILT_IN_CHAIN_NAME=$(/opt/bin/grep '^BUILT_IN_CHAIN_NAME=' ${PRIVATE_BIN}/fw_ss_transparent_proxy_enable.service | /opt/bin/gawk -F '"' '{print $2}')
#
# USER_DEFINED_CHAIN_NAME: Name of the user-defined chain
# 设置自定义变量USER_DEFINED_CHAIN_NAME为防火墙自定义链名
USER_DEFINED_CHAIN_NAME=$(/opt/bin/grep '^USER_DEFINED_CHAIN_NAME=' ${PRIVATE_BIN}/fw_ss_transparent_proxy_enable.service | /opt/bin/gawk -F '"' '{print $2}')
#
# DNS_PORT: Local port of ss-tunnel
# 设置自定义变量DNS_PORT为ss-tunnel的本地端口
DNS_PORT=$(/opt/bin/grep '"local_port":' ${PRIVATE_ETC}/config_tunnel.json | /opt/bin/gawk -F '"' '{print $4}')
#
# ADMINUSER: The administrator of the router
# 设置环境变量ADMINUSER为路由器管理页面的登陆帐号
ADMINUSER=$(nvram get http_username)
#
# TEST_SS_REDIR: Test for ss-redir process
# 设置环境变量TEST_SS_REDIR为ss-redir进程测试值
if [ -f "${SS_REDIR_PID_FILE}" ]
then
    PID_NUM=$(/opt/bin/cat ${SS_REDIR_PID_FILE})
    if [ ! -z "$(ps | /opt/bin/grep ${PID_NUM} | /opt/bin/grep -v '/opt/bin/grep')" ]
    then
        TEST_SS_REDIR=true
    else
        TEST_SS_REDIR=false
    fi
else
    TEST_SS_REDIR=false
fi
#
# TEST_SS_TUNNEL: Test for ss-tunnel process
# 设置环境变量TEST_SS_TUNNEL为ss-tunnel进程测试值
if [ -f "${SS_TUNNEL_PID_FILE}" ]
then
    PID_NUM=$(/opt/bin/cat ${SS_TUNNEL_PID_FILE})
    if [ ! -z "$(ps | /opt/bin/grep ${PID_NUM} | /opt/bin/grep -v '/opt/bin/grep')" ]
    then
        TEST_SS_TUNNEL=true
    else
        TEST_SS_TUNNEL=false
    fi
else
    TEST_SS_TUNNEL=false
fi
#
# TEST_FW: Test for firewall rules
# 设置环境变量TEST_FW为防火墙规则测试值
# 特殊说明：必须避免双引号多重嵌套
CHECK_RULES=$(iptables -t nat -nvL ${BUILT_IN_CHAIN_NAME} | /opt/bin/grep "${USER_DEFINED_CHAIN_NAME}")
if [ ! -z "${CHECK_RULES}" ]
then
    TEST_FW=true
else
    TEST_FW=false
fi
#
########## END ##########
#
#
########## ENABLE SS-REDIR, SS-TUNNEL AND SS-FW ##########
#
# Check if ${PRIVATE_BIN}/ss_redir_enable.service, ${PRIVATE_BIN}/ss_tunnel_enable.service and ${PRIVATE_BIN}/fw_ss_transparent_proxy_enable.service have been loaded
# 检查${PRIVATE_BIN}/ss_redir_enable.service，${PRIVATE_BIN}/ss_tunnel_enable.service和${PRIVATE_BIN}/fw_ss_transparent_proxy_enable.service是否被加载
if ${TEST_SS_REDIR} && ${TEST_SS_TUNNEL} && ${TEST_FW}
then
    # Everything is OK
    # 满足全部条件
    /opt/bin/echo -e "TRANSPARENT PROXY IS ON"
    #
    exit 0
else
    # Stop all the relevant processes
    # 如果有任意条件不符，则停止全部相关进程
    ${PRIVATE_BIN}/ss_transparent_proxy_disable_file.service > /dev/null 2>&1
    #
    /opt/bin/echo -e "LOAD TRANSPARENT PROXY"
    #
    # Update /etc/hosts
    # 更新文件/etc/hosts
    /opt/bin/echo "${SERVER_IP} ${SERVER_DOMAIN}" >> /etc/hosts
    #
    # Start all the relevant processes
    # 启动全部相关进程
    ${PRIVATE_BIN}/ss_redir_enable.service > /dev/null 2>&1
    sleep 2
    ${PRIVATE_BIN}/ss_tunnel_enable.service > /dev/null 2>&1
    sleep 2
    ${PRIVATE_BIN}/fw_ss_transparent_proxy_enable.service > /dev/null 2>&1
    sleep 2
    #
    # Update DNS server
    # 更新DNS服务器
    /opt/bin/sed -i '/^server=.*/s/^/#/' /tmp/resolv.dnsmasq
    /opt/bin/echo "server=127.0.0.1#${DNS_PORT}" >> /tmp/resolv.dnsmasq
    /opt/bin/killall -q -1 dnsmasq > /dev/null 2>&1
    sleep 30
    #
    #
    ########## ENABLE CRONTAB ##########
    #
    # Enable crontab because something is wrong with the poll time of monit
    # 因为monit的执行周期BUG，故启用crontab进行进程周期执行
    /opt/bin/echo "*/5 * * * * ${PRIVATE_BIN}/ss_transparent_proxy_enable_file.service" >> /var/spool/cron/crontabs/${ADMINUSER}
    /opt/bin/chmod 600 /var/spool/cron/crontabs/${ADMINUSER}
    #
    # Create status file
    # 创建状态文件
    /opt/bin/touch /var/run/ss_transparent_proxy_enable_file
    #
    ########## END ##########
    #
    #
    exit 1
    #
fi
#
########## END ##########